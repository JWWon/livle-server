swagger: '2.0'
info:
  description: 라이블 API
  version: 1.0.0
  title: Livle App API
host: api.livle.kr
basePath: /dev
tags:
  - name: user
    description: 라이블 일반 회원 (앱)
  - name: partner
    description: 공연기획사 회원 (웹)
  - name: ticket
    description: 콘서트 정보
  - name: reservation
    description: '콘서트 예약 정보 [미구현]'
  - name: subscription
    description: 구독 정보
  - name: file
    description: 파일 관리
schemes:
  - https
paths:
  /user:
    post:
      tags:
        - user
      summary: 회원가입
      description: '이메일, 비밀번호 validation은 클라이언트에서 해주세요.'
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          description: 가입할 유저의 아이디와 비밀번호
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: contacts@livle.kr
              password:
                type: string
                example: '12345'
      responses:
        '200':
          description: 가입 성공
          schema:
            $ref: '#/definitions/User'
        '400':
          description: 잘못된 요청 (이메일이나 비밀번호가 없음)
        '403':
          description: 이미 존재하는 아이디
        '405':
          description: 잘못된 이메일 형식
    get:
      tags:
        - user
      summary: 회원정보 가져오기
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          type: string
          description: JWT Token
          required: true
      responses:
        '200':
          description: 성공
          schema:
            $ref: '#/definitions/User'
        '401':
          description: 헤더에 토큰이 없음
        '403':
          description: 헤더에 토큰이 있지만 유효하지 않음
  /user/facebook:
    post:
      tags:
        - user
      summary: '페이스북 가입 [미구현]'
      description: 'TODO : 페이스북 가입 및 로그인 시 리턴되는 정보'
      responses:
        '200':
          description: TODO
  /user/password:
    get:
      tags:
        - user
      summary: 비밀번호 재설정 이메일 보내기
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: email
          in: query
          description: 비밀번호를 재설정할 이메일
          required: true
          type: string
      responses:
        '200':
          description: 이메일 전송
        '400':
          description: 이메일이 없거나 잘못된 형식
        '404':
          description: 해당하는 유저가 없음
    patch:
      tags:
        - user
      summary: '비밀번호 재설정하기 [미구현]'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: params
          in: body
          schema:
            type: object
            properties:
              password:
                type: string
                example: abcde
                description: 새로운 비밀번호
              token:
                type: string
                example: f7QdxGje
                description: 이메일에 포함된 비밀번호 변경 토큰
      responses:
        '200':
          description: 변경 성공
        '400':
          description: 비밀번호나 토큰이 없음
        '404':
          description: 잘못된 토큰
  /user/session:
    post:
      tags:
        - user
      summary: 로그인
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user
          in: body
          description: 로그인할 유저의 아이디와 비밀번호
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: contacts@livle.kr
              password:
                type: string
                example: '12345'
      responses:
        '200':
          description: 로그인 성공
          schema:
            $ref: '#/definitions/User'
        '400':
          description: 이메일 또는 비밀번호가 없거나 잘못됨
        '403':
          description: 해당 아이디로 가입된 정보는 있으나 비밀번호가 틀림
        '404':
          description: 해당 아이디로 가입된 정보가 없음
    delete:
      tags:
        - user
      summary: 로그아웃 - Session Storage 이용하지 않으므로 불필요
      responses:
        '200':
          description: 로그아웃 성공
  /partner:
    post:
      tags:
        - partner
      summary: 회원가입
      description: '이메일, 비밀번호 validation은 클라이언트에서 해주세요.'
      consumes:
        - application/json
      parameters:
        - name: partner
          in: body
          description: 가입할 유저의 아이디와 비밀번호
          required: true
          schema:
            type: object
            properties:
              company:
                type: string
                example: 라이블
              username:
                type: string
                example: livle
              password:
                type: string
                example: '12345'
      responses:
        '200':
          description: 가입 성공
          schema:
            $ref: '#/definitions/Partner'
        '400':
          description: 잘못된 요청 (이메일이나 비밀번호가 없음)
        '403':
          description: 이미 존재하는 아이디
        '405':
          description: 잘못된 이메일 형식
    get:
      tags:
        - partner
      summary: 세션 체크
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: 세션 정보를 담고 있는 토큰
          required: true
          type: string
      responses:
        '200':
          description: 로그인된 유저
          schema:
            $ref: '#/definitions/Partner'
        '401':
          description: 로그인되지 않은 상태
        '403':
          description: 유효하지 않은 세션
  /partner/session:
    get:
      tags:
        - partner
      summary: 로그인
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          type: string
          required: true
        - name: password
          in: query
          type: string
          required: true
          description: 암호화된 형식으로 전송되어야 함
      responses:
        '200':
          description: 로그인 성공
          schema:
            $ref: '#/definitions/Partner'
        '400':
          description: 이메일 또는 비밀번호가 없거나 잘못됨
        '401':
          description: 아직 승인되지 않은 계정임
        '403':
          description: 일치하는 회원이 없음
  /ticket:
    get:
      tags:
        - ticket
      summary: 일주일 간의 티켓 정보 가져오기
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: 세션토큰
          required: true
          type: string
      responses:
        '200':
          description: 성공
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        '401':
          description: 로그인되지 않음
    post:
      tags:
        - ticket
      summary: '[관리자] 새로운 티켓 등록하기'
      parameters:
        - name: Authorization
          in: header
          description: 세션 정보를 담고 있는 토큰
          required: true
          type: string
        - name: ticket
          in: body
          required: true
          schema:
            $ref: '#/definitions/Ticket'
      responses:
        '200':
          description: 성공
          schema:
            $ref: '#/definitions/Ticket'
        '401':
          description: 로그인되지 않음
        '403':
          description: 관리자가 아님
    patch:
      tags:
        - ticket
      summary: '[관리자] 등록된 티켓 정보 수정하기 [미구현]'
      parameters:
        - name: Authorization
          in: header
          description: 세션 정보를 담고 있는 토큰
          required: true
          type: string
        - name: ticket
          in: body
          required: true
          schema:
            $ref: '#/definitions/Ticket'
      responses:
        '200':
          description: 성공
          schema:
            $ref: '#/definitions/Ticket'
        '401':
          description: 로그인되지 않음
        '403':
          description: 관리자가 아님
  '/ticket/{ticketId}':
    get:
      tags:
        - ticket
      summary: '티켓 하나의 정보 [미구현]'
      produces:
        - application/json
      parameters:
        - name: ticketId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 성공
          schema:
            $ref: '#/definitions/Ticket'
  '/ticket/{ticketId}/reserve':
    post:
      tags:
        - ticket
      summary: 티켓 예약하기
      produces:
        - application/json
      parameters:
        - name: ticketId
          in: path
          description: 예약할 티켓 아이디
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: 예약 성공
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: >-
            실패 - (ticket_not_found : 존재하지 않는 티켓, overdue: 기한이 지난 티켓, no_vacancy:
            잔여 좌석없음, no_permission: 구독 중인 유저가 아니거나 패널티를 받고 있음)
  /reservation:
    get:
      tags:
        - reservation
      summary: 예약 정보 가져오기
      description: '입장된 것, 미입장된 것 모두 가져옵니다. checked_at이 null이면 아직 미입장.'
      parameters:
        - name: Authorization
          in: header
          description: 세션토큰
          required: true
          type: string
      responses:
        '200':
          description: 성공
          schema:
            type: array
            items:
              $ref: '#/definitions/Reservation'
        '401':
          description: 로그인되지 않음
  '/reservation/{reservationId}/check':
    post:
      tags:
        - reservation
      summary: 체크인하기
      parameters:
        - name: reservationId
          in: path
          description: 예약 아이디
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: 세션토큰
          required: true
          type: string
        - name: code
          in: body
          required: true
          schema:
            type: string
            example: '1234'
      responses:
        '200':
          description: 체크인 성공
          schema:
            $ref: '#/definitions/Reservation'
        '400':
          description: 요청에 코드가 없음
        '401':
          description: 로그인되지 않음
        '403':
          description: 잘못된 체크인 코드
        '404':
          description: 잘못된 예약 아이디이거나 이 유저의 예약이 아님
        '405':
          description: 이미 체크인 함
  /subscription:
    get:
      tags:
        - subscription
      summary: 구독 정보 (카드 등)
      parameters:
        - name: Authorization
          in: header
          description: 세션토큰
          required: true
          type: string
      responses:
        '200':
          description: 성공
          schema:
            type: object
            properties:
              card_name:
                type: string
                example: 신한카드
              last_four_digits:
                type: string
                example: '1234'
              latest_paid_at:
                type: string
                example: '2017-11-28T09:14:47.558Z'
        '401':
          description: 로그인되지 않음
        '404':
          description: 구독 정보를 찾을 수 없음
    post:
      tags:
        - subscription
      summary: 구독
      description: 결제 Validation 등
      parameters:
        - name: Authorization
          in: header
          description: 세션토큰
          required: true
          type: string
        - name: payment
          in: body
          required: true
          schema:
            type: object
            properties:
              cardNumber:
                type: string
                example: 1111-2222-3333-4444
              expiry:
                type: string
                example: 2018-03
                description: 카드 유효기간
              birth:
                type: string
                example: '920723'
                description: 카드 소유자 생년월일 (주민번호 앞 6자리)
              password:
                type: string
                description: 카드 비밀번호 앞 두자리
                example: '12'
      responses:
        '200':
          description: 구독 성공
          schema:
            type: object
            properties:
              card_name:
                type: string
                example: 신한카드
              last_four_digits:
                type: string
                example: '1234'
              latest_paid_at:
                type: string
                example: '2017-11-28T09:14:47.558Z'
        '400':
          description: 결제 정보 중 누락된 것이 있음
        '401':
          description: 로그인되지 않음
        '405':
          description: 이미 구독 중
    delete:
      tags:
        - subscription
      summary: 구독 취소
      responses:
        '200':
          description: 구독 취소 성공
        '401':
          description: 로그인되지 않음
        '404':
          description: 구독 중인 내역이 없음
  /file:
    get:
      tags:
        - file
      summary: S3에 업로드하기 위해 인증
      parameters:
        - name: Authorization
          in: header
          description: 세션 정보를 담고 있는 토큰
          required: true
          type: string
      responses:
        '200':
          description: 인증됨
          schema:
            type: object
            properties:
              signedUrl:
                type: string
                description: 파일을 업로드할 action의 주소
                example: 'https://livle.s3.aws.com/upload/token12345'
              filePath:
                type: string
                description: 업로드될 파일 주소
                example: >-
                  https://s3.ap-northeast-2.amazonaws.com/livle/55b48f00-cf71-11e7-b3f4-ddd786cc1c81
        '401':
          description: 로그인되지 않음
        '403':
          description: 권한이 없음 (admin@livle.kr만 가능)
definitions:
  User:
    type: object
    description: 'password, password_reset_token, customer_uid는 리턴되지 않음'
    properties:
      id:
        type: integer
        format: int64
      email:
        type: string
      expire_at:
        type: number
        description: 구독 종료일 (js Date type)
      is_subscribing:
        type: boolean
        description: 구독 지속 중임을 나타냄 (현재 권한이 있는지 여부는 expire_at으로 확인할 것)
      token:
        type: string
        description: >-
          회원가입 또는 로그인 시에만 전달됨. 클라이언트에 저장해두고 요청보낼 때 header에 Authorization이라는 이름으로
          포함하기.
  Partner:
    type: object
    description: password는 리턴되지 않음
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      company:
        type: string
      token:
        type: string
  Artist:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      image:
        type: string
  Ticket:
    type: object
    description: 'capacity, checkin_code는 리턴되지 않음'
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
        example: 댕댕이 페스티벌
      artists:
        type: array
        items:
          $ref: '#/definitions/Artist'
      start_at:
        type: number
        description: 시작시간
      end_at:
        type: number
        description: 종료시간
      image:
        type: string
        description: 카드 메인 이미지 주소
      vacancies:
        type: number
        description: 'capacity - # of reservations'
      place:
        type: string
        example: 판교 스타트업캠퍼스
      music_id:
        type: string
        description: 음악 주소나 아이디... 아직 모름
      video_id:
        type: string
        description: 영상 주소나 아이디... 아직 모름
      article:
        type: string
        description: 웹 뷰로 보여줄 추가 정보가 있을 경우 웹 주소
  Reservation:
    type: object
    properties:
      id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
      ticket_id:
        type: integer
        format: int64
      status:
        type: string
        example: valid
        description: 'valid, cancelled, noshow 중 하나'
      created_at:
        type: string
      checked_at:
        type: string
        description: '체크인한 시간 (js Date type), null if not checked in'
